# Generated by Django 4.2.7 on 2025-09-20 10:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='SearchFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('filter_type', models.CharField(choices=[('category', 'Catégorie'), ('brand', 'Marque'), ('price_range', 'Gamme de prix'), ('rating', 'Note'), ('availability', 'Disponibilité'), ('color', 'Couleur'), ('size', 'Taille'), ('material', 'Matériau')], max_length=20, verbose_name='type de filtre')),
                ('field_name', models.CharField(max_length=100, verbose_name='nom du champ')),
                ('display_name', models.CharField(max_length=100, verbose_name="nom d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ordre')),
            ],
            options={
                'verbose_name': 'Filtre de recherche',
                'verbose_name_plural': 'Filtres de recherche',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SearchSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=200, unique=True, verbose_name='requête')),
                ('count', models.PositiveIntegerField(default=1, verbose_name="nombre d'utilisations")),
                ('last_used', models.DateTimeField(auto_now=True, verbose_name='dernière utilisation')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
            ],
            options={
                'verbose_name': 'Suggestion de recherche',
                'verbose_name_plural': 'Suggestions de recherche',
                'ordering': ['-count', '-last_used'],
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, verbose_name='clé de session')),
                ('query', models.CharField(max_length=200, verbose_name='requête')),
                ('filters', models.JSONField(blank=True, default=dict, verbose_name='filtres appliqués')),
                ('results_count', models.PositiveIntegerField(default=0, verbose_name='nombre de résultats')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='horodatage')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historique de recherche',
                'verbose_name_plural': 'Historiques de recherche',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SearchAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=200, verbose_name='requête')),
                ('results_count', models.PositiveIntegerField(default=0, verbose_name='nombre de résultats')),
                ('click_through_rate', models.FloatField(default=0.0, verbose_name='taux de clic')),
                ('conversion_rate', models.FloatField(default=0.0, verbose_name='taux de conversion')),
                ('date', models.DateField(verbose_name='date')),
            ],
            options={
                'verbose_name': 'Analytics de recherche',
                'verbose_name_plural': 'Analytics de recherche',
                'ordering': ['-date', '-results_count'],
                'unique_together': {('query', 'date')},
            },
        ),
        migrations.CreateModel(
            name='SearchIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('description', models.TextField(verbose_name='description')),
                ('keywords', models.TextField(blank=True, verbose_name='mots-clés')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='catégorie')),
                ('brand', models.CharField(blank=True, max_length=100, verbose_name='marque')),
                ('tags', models.TextField(blank=True, verbose_name='tags')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='prix')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('popularity_score', models.FloatField(default=0.0, verbose_name='score de popularité')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Index de recherche',
                'verbose_name_plural': 'Index de recherche',
                'indexes': [models.Index(fields=['title'], name='search_sear_title_51a3a1_idx'), models.Index(fields=['category'], name='search_sear_categor_dc6fcb_idx'), models.Index(fields=['brand'], name='search_sear_brand_a5170f_idx'), models.Index(fields=['is_active', 'popularity_score'], name='search_sear_is_acti_577b06_idx')],
                'unique_together': {('content_type', 'object_id')},
            },
        ),
    ]
