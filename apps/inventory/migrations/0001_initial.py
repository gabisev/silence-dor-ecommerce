# Generated by Django 4.2.7 on 2025-09-20 10:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('orders', '0001_initial'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='code')),
                ('contact_person', models.CharField(blank=True, max_length=100, verbose_name='personne de contact')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='téléphone')),
                ('address', models.TextField(blank=True, verbose_name='adresse')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='ville')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='code postal')),
                ('country', models.CharField(default='France', max_length=100, verbose_name='pays')),
                ('payment_terms', models.CharField(blank=True, max_length=100, verbose_name='conditions de paiement')),
                ('delivery_time_days', models.PositiveIntegerField(default=7, verbose_name='délai de livraison (jours)')),
                ('minimum_order_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='valeur minimum de commande')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('is_preferred', models.BooleanField(default=False, verbose_name='fournisseur préféré')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
            ],
            options={
                'verbose_name': 'Fournisseur',
                'verbose_name_plural': 'Fournisseurs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='code')),
                ('address', models.TextField(verbose_name='adresse')),
                ('city', models.CharField(max_length=100, verbose_name='ville')),
                ('postal_code', models.CharField(max_length=10, verbose_name='code postal')),
                ('country', models.CharField(default='France', max_length=100, verbose_name='pays')),
                ('contact_person', models.CharField(blank=True, max_length=100, verbose_name='personne de contact')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('is_default', models.BooleanField(default=False, verbose_name='entrepôt par défaut')),
                ('max_capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='capacité maximale')),
                ('current_capacity', models.PositiveIntegerField(default=0, verbose_name='capacité actuelle')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
            ],
            options={
                'verbose_name': 'Entrepôt',
                'verbose_name_plural': 'Entrepôts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_stock', models.PositiveIntegerField(default=0, verbose_name='stock actuel')),
                ('reserved_stock', models.PositiveIntegerField(default=0, verbose_name='stock réservé')),
                ('available_stock', models.PositiveIntegerField(default=0, verbose_name='stock disponible')),
                ('min_stock_level', models.PositiveIntegerField(default=0, verbose_name='stock minimum')),
                ('max_stock_level', models.PositiveIntegerField(blank=True, null=True, verbose_name='stock maximum')),
                ('reorder_point', models.PositiveIntegerField(default=0, verbose_name='point de réapprovisionnement')),
                ('reorder_quantity', models.PositiveIntegerField(default=0, verbose_name='quantité de réapprovisionnement')),
                ('average_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='coût moyen')),
                ('last_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='dernier coût')),
                ('last_movement', models.DateTimeField(blank=True, null=True, verbose_name='dernier mouvement')),
                ('last_count', models.DateTimeField(blank=True, null=True, verbose_name='dernier inventaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_levels', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_levels', to='inventory.warehouse')),
            ],
            options={
                'verbose_name': 'Niveau de stock',
                'verbose_name_plural': 'Niveaux de stock',
                'ordering': ['product__name', 'warehouse__name'],
                'unique_together': {('product', 'warehouse')},
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True, verbose_name='numéro de commande')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyée'), ('confirmed', 'Confirmée'), ('partial', 'Partiellement reçue'), ('received', 'Reçue'), ('cancelled', 'Annulée')], default='draft', max_length=20, verbose_name='statut')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='date de commande')),
                ('expected_delivery', models.DateTimeField(blank=True, null=True, verbose_name='livraison prévue')),
                ('actual_delivery', models.DateTimeField(blank=True, null=True, verbose_name='livraison effective')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='sous-total')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='montant des taxes')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='montant total')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_purchase_orders', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.supplier')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.warehouse')),
            ],
            options={
                'verbose_name': "Commande d'achat",
                'verbose_name_plural': "Commandes d'achat",
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('status', models.CharField(choices=[('planned', 'Planifié'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('cancelled', 'Annulé')], default='planned', max_length=20, verbose_name='statut')),
                ('planned_date', models.DateTimeField(verbose_name='date planifiée')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='commencé le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='terminé le')),
                ('total_products', models.PositiveIntegerField(default=0, verbose_name='total produits')),
                ('counted_products', models.PositiveIntegerField(default=0, verbose_name='produits comptés')),
                ('discrepancies', models.PositiveIntegerField(default=0, verbose_name='écarts')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_inventory_counts', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_inventory_counts', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_counts', to='inventory.warehouse')),
            ],
            options={
                'verbose_name': 'Inventaire',
                'verbose_name_plural': 'Inventaires',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('in', 'Entrée'), ('out', 'Sortie'), ('transfer', 'Transfert'), ('adjustment', 'Ajustement'), ('return', 'Retour'), ('damage', 'Dommage'), ('expired', 'Expiré')], max_length=20, verbose_name='type de mouvement')),
                ('reason', models.CharField(choices=[('purchase', 'Achat'), ('sale', 'Vente'), ('transfer', 'Transfert entre entrepôts'), ('adjustment', 'Ajustement manuel'), ('return', 'Retour client'), ('damage', 'Produit endommagé'), ('expired', 'Produit expiré'), ('theft', 'Vol'), ('other', 'Autre')], max_length=20, verbose_name='raison')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='quantité')),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='coût unitaire')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='coût total')),
                ('reference_number', models.CharField(blank=True, max_length=100, verbose_name='numéro de référence')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='horodatage')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='inventory.warehouse')),
            ],
            options={
                'verbose_name': 'Mouvement de stock',
                'verbose_name_plural': 'Mouvements de stock',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['product', 'warehouse'], name='inventory_s_product_5d230d_idx'), models.Index(fields=['movement_type', 'timestamp'], name='inventory_s_movemen_80a98d_idx'), models.Index(fields=['reference_number'], name='inventory_s_referen_79719e_idx')],
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('low_stock', 'Stock bas'), ('out_of_stock', 'Rupture de stock'), ('overstock', 'Surstock'), ('expiring', 'Expiration proche'), ('reorder', 'Réapprovisionnement nécessaire')], max_length=20, verbose_name="type d'alerte")),
                ('alert_level', models.CharField(choices=[('info', 'Information'), ('warning', 'Avertissement'), ('critical', 'Critique')], default='warning', max_length=10, verbose_name="niveau d'alerte")),
                ('message', models.TextField(verbose_name='message')),
                ('current_stock', models.PositiveIntegerField(verbose_name='stock actuel')),
                ('threshold', models.PositiveIntegerField(verbose_name='seuil')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='résolu')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='résolu le')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_alerts', to='products.product')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('stock_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='inventory.stocklevel')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_alerts', to='inventory.warehouse')),
            ],
            options={
                'verbose_name': 'Alerte de stock',
                'verbose_name_plural': 'Alertes de stock',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['alert_type', 'is_active'], name='inventory_s_alert_t_cb59e5_idx'), models.Index(fields=['alert_level', 'is_resolved'], name='inventory_s_alert_l_41c856_idx')],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.PositiveIntegerField(verbose_name='quantité commandée')),
                ('quantity_received', models.PositiveIntegerField(default=0, verbose_name='quantité reçue')),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='coût unitaire')),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='coût total')),
                ('expected_delivery', models.DateTimeField(blank=True, null=True, verbose_name='livraison prévue')),
                ('actual_delivery', models.DateTimeField(blank=True, null=True, verbose_name='livraison effective')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_order_items', to='products.product')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder')),
            ],
            options={
                'verbose_name': "Élément de commande d'achat",
                'verbose_name_plural': "Éléments de commande d'achat",
                'unique_together': {('purchase_order', 'product')},
            },
        ),
        migrations.CreateModel(
            name='InventoryCountItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_quantity', models.PositiveIntegerField(verbose_name='quantité attendue')),
                ('counted_quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='quantité comptée')),
                ('difference', models.IntegerField(default=0, verbose_name='différence')),
                ('is_counted', models.BooleanField(default=False, verbose_name='compté')),
                ('has_discrepancy', models.BooleanField(default=False, verbose_name='a un écart')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('counted_at', models.DateTimeField(blank=True, null=True, verbose_name='compté le')),
                ('counted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='counted_items', to=settings.AUTH_USER_MODEL)),
                ('inventory_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.inventorycount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_count_items', to='products.product')),
            ],
            options={
                'verbose_name': "Élément d'inventaire",
                'verbose_name_plural': "Éléments d'inventaire",
                'unique_together': {('inventory_count', 'product')},
            },
        ),
    ]
