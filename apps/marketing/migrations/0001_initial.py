# Generated by Django 4.2.7 on 2025-09-20 10:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name="nom de l'entreprise")),
                ('website_url', models.URLField(blank=True, verbose_name='URL du site web')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('affiliate_code', models.CharField(max_length=50, unique=True, verbose_name="code d'affiliation")),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('suspended', 'Suspendu'), ('rejected', 'Rejeté')], default='pending', max_length=20, verbose_name='statut')),
                ('total_clicks', models.PositiveIntegerField(default=0, verbose_name='total clics')),
                ('total_conversions', models.PositiveIntegerField(default=0, verbose_name='total conversions')),
                ('total_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='total commission')),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='total payé')),
                ('applied_at', models.DateTimeField(auto_now_add=True, verbose_name='candidature le')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='approuvé le')),
            ],
            options={
                'verbose_name': 'Affilié',
                'verbose_name_plural': 'Affiliés',
            },
        ),
        migrations.CreateModel(
            name='AffiliateProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('commission_type', models.CharField(choices=[('percentage', 'Pourcentage'), ('fixed', 'Montant fixe')], default='percentage', max_length=20, verbose_name='type de commission')),
                ('commission_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='valeur de commission')),
                ('minimum_payout', models.DecimalField(decimal_places=2, default=50, max_digits=10, verbose_name='paiement minimum')),
                ('cookie_duration_days', models.PositiveIntegerField(default=30, verbose_name='durée des cookies (jours)')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
            ],
            options={
                'verbose_name': "Programme d'affiliation",
                'verbose_name_plural': "Programmes d'affiliation",
            },
        ),
        migrations.CreateModel(
            name='LoyaltyAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.PositiveIntegerField(default=0, verbose_name='points totaux')),
                ('available_points', models.PositiveIntegerField(default=0, verbose_name='points disponibles')),
                ('used_points', models.PositiveIntegerField(default=0, verbose_name='points utilisés')),
                ('membership_level', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Argent'), ('gold', 'Or'), ('platinum', 'Platine')], default='bronze', max_length=20, verbose_name="niveau d'adhésion")),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='total dépensé')),
                ('total_orders', models.PositiveIntegerField(default=0, verbose_name='total commandes')),
                ('referrals_count', models.PositiveIntegerField(default=0, verbose_name='nombre de parrainages')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='rejoint le')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='dernière activité')),
            ],
            options={
                'verbose_name': 'Compte de fidélité',
                'verbose_name_plural': 'Comptes de fidélité',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('points_per_euro', models.DecimalField(decimal_places=2, default=1.0, max_digits=5, verbose_name='points par euro')),
                ('points_per_signup', models.PositiveIntegerField(default=100, verbose_name='points pour inscription')),
                ('points_per_review', models.PositiveIntegerField(default=50, verbose_name='points pour avis')),
                ('points_per_referral', models.PositiveIntegerField(default=200, verbose_name='points pour parrainage')),
                ('bronze_threshold', models.PositiveIntegerField(default=0, verbose_name='seuil bronze')),
                ('silver_threshold', models.PositiveIntegerField(default=1000, verbose_name='seuil argent')),
                ('gold_threshold', models.PositiveIntegerField(default=5000, verbose_name='seuil or')),
                ('platinum_threshold', models.PositiveIntegerField(default=10000, verbose_name='seuil platine')),
                ('bronze_discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='réduction bronze (%)')),
                ('silver_discount', models.DecimalField(decimal_places=2, default=5, max_digits=5, verbose_name='réduction argent (%)')),
                ('gold_discount', models.DecimalField(decimal_places=2, default=10, max_digits=5, verbose_name='réduction or (%)')),
                ('platinum_discount', models.DecimalField(decimal_places=2, default=15, max_digits=5, verbose_name='réduction platine (%)')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
            ],
            options={
                'verbose_name': 'Programme de fidélité',
                'verbose_name_plural': 'Programmes de fidélité',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('earned', 'Gagné'), ('used', 'Utilisé'), ('expired', 'Expiré'), ('refunded', 'Remboursé')], max_length=20, verbose_name='type de transaction')),
                ('points', models.IntegerField(verbose_name='points')),
                ('reason', models.CharField(max_length=200, verbose_name='raison')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='horodatage')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='marketing.loyaltyaccount')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loyalty_transactions', to='orders.order')),
            ],
            options={
                'verbose_name': 'Transaction de fidélité',
                'verbose_name_plural': 'Transactions de fidélité',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='loyaltyaccount',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='marketing.loyaltyprogram'),
        ),
        migrations.AddField(
            model_name='loyaltyaccount',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_account', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('template_type', models.CharField(choices=[('welcome', 'Email de bienvenue'), ('newsletter', 'Newsletter'), ('promotional', 'Email promotionnel'), ('abandoned_cart', 'Panier abandonné'), ('order_confirmation', 'Confirmation de commande'), ('order_shipped', 'Commande expédiée'), ('birthday', 'Anniversaire'), ('reengagement', 'Réengagement')], max_length=30, verbose_name='type de template')),
                ('subject', models.CharField(max_length=200, verbose_name='sujet')),
                ('html_content', models.TextField(verbose_name='contenu HTML')),
                ('text_content', models.TextField(blank=True, verbose_name='contenu texte')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_email_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Template d'email",
                'verbose_name_plural': "Templates d'email",
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='code')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('coupon_type', models.CharField(choices=[('percentage', 'Pourcentage'), ('fixed_amount', 'Montant fixe'), ('free_shipping', 'Livraison gratuite'), ('buy_x_get_y', 'Achetez X obtenez Y')], max_length=20, verbose_name='type de coupon')),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='valeur')),
                ('minimum_order_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='montant minimum de commande')),
                ('maximum_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='montant maximum de réduction')),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True, verbose_name="limite d'utilisation")),
                ('usage_limit_per_user', models.PositiveIntegerField(default=1, verbose_name="limite d'utilisation par utilisateur")),
                ('used_count', models.PositiveIntegerField(default=0, verbose_name="nombre d'utilisations")),
                ('valid_from', models.DateTimeField(verbose_name='valide à partir du')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name="valide jusqu'au")),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif'), ('expired', 'Expiré'), ('exhausted', 'Épuisé')], default='active', max_length=20, verbose_name='statut')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
                ('applicable_categories', models.ManyToManyField(blank=True, related_name='applicable_coupons', to='products.category', verbose_name='catégories applicables')),
                ('applicable_products', models.ManyToManyField(blank=True, related_name='applicable_coupons', to='products.product', verbose_name='produits applicables')),
                ('applicable_users', models.ManyToManyField(blank=True, related_name='applicable_coupons', to=settings.AUTH_USER_MODEL, verbose_name='utilisateurs applicables')),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('campaign_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Notification push'), ('banner', 'Bannière'), ('popup', 'Popup'), ('social', 'Réseaux sociaux'), ('affiliate', 'Affiliation')], max_length=20, verbose_name='type de campagne')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('scheduled', 'Programmée'), ('active', 'Active'), ('paused', 'En pause'), ('completed', 'Terminée'), ('cancelled', 'Annulée')], default='draft', max_length=20, verbose_name='statut')),
                ('start_date', models.DateTimeField(verbose_name='date de début')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='date de fin')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='budget')),
                ('spent_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='montant dépensé')),
                ('target_audience', models.JSONField(blank=True, default=dict, verbose_name='audience cible')),
                ('impressions', models.PositiveIntegerField(default=0, verbose_name='impressions')),
                ('clicks', models.PositiveIntegerField(default=0, verbose_name='clics')),
                ('conversions', models.PositiveIntegerField(default=0, verbose_name='conversions')),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='revenus générés')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Campagne',
                'verbose_name_plural': 'Campagnes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AffiliateClick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('referrer', models.URLField(blank=True, verbose_name='référent')),
                ('page_url', models.URLField(verbose_name='URL de la page')),
                ('converted', models.BooleanField(default=False, verbose_name='converti')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='horodatage')),
                ('affiliate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clicks', to='marketing.affiliate')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='affiliate_clicks', to='orders.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='affiliate_clicks', to='products.product')),
            ],
            options={
                'verbose_name': "Clic d'affiliation",
                'verbose_name_plural': "Clics d'affiliation",
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='affiliate',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliates', to='marketing.affiliateprogram'),
        ),
        migrations.AddField(
            model_name='affiliate',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='affiliate', to=settings.AUTH_USER_MODEL),
        ),
    ]
