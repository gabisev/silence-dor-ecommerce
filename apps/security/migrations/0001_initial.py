# Generated by Django 4.2.7 on 2025-09-20 10:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SecuritySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_min_length', models.PositiveIntegerField(default=8, verbose_name='longueur minimale du mot de passe')),
                ('password_require_uppercase', models.BooleanField(default=True, verbose_name='exiger majuscules')),
                ('password_require_lowercase', models.BooleanField(default=True, verbose_name='exiger minuscules')),
                ('password_require_numbers', models.BooleanField(default=True, verbose_name='exiger chiffres')),
                ('password_require_symbols', models.BooleanField(default=False, verbose_name='exiger symboles')),
                ('password_expiry_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='expiration du mot de passe (jours)')),
                ('max_login_attempts', models.PositiveIntegerField(default=5, verbose_name='tentatives de connexion max')),
                ('lockout_duration_minutes', models.PositiveIntegerField(default=30, verbose_name='durée de verrouillage (minutes)')),
                ('require_2fa_for_admins', models.BooleanField(default=True, verbose_name='exiger 2FA pour les admins')),
                ('require_2fa_for_staff', models.BooleanField(default=False, verbose_name='exiger 2FA pour le personnel')),
                ('session_timeout_minutes', models.PositiveIntegerField(default=120, verbose_name='timeout de session (minutes)')),
                ('max_concurrent_sessions', models.PositiveIntegerField(default=3, verbose_name='sessions simultanées max')),
                ('audit_log_retention_days', models.PositiveIntegerField(default=365, verbose_name="rétention des logs d'audit (jours)")),
                ('log_failed_attempts', models.BooleanField(default=True, verbose_name='logger les tentatives échouées')),
                ('notify_on_suspicious_activity', models.BooleanField(default=True, verbose_name='notifier activité suspecte')),
                ('notify_on_admin_actions', models.BooleanField(default=True, verbose_name='notifier actions admin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='modifié le')),
            ],
            options={
                'verbose_name': 'Paramètres de sécurité',
                'verbose_name_plural': 'Paramètres de sécurité',
            },
        ),
        migrations.CreateModel(
            name='TwoFactorAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_key', models.CharField(max_length=32, unique=True, verbose_name='clé secrète')),
                ('is_enabled', models.BooleanField(default=False, verbose_name='activé')),
                ('backup_codes', models.JSONField(blank=True, default=list, verbose_name='codes de sauvegarde')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='dernière utilisation')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='two_factor_auth', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Authentification à deux facteurs',
                'verbose_name_plural': 'Authentifications à deux facteurs',
            },
        ),
        migrations.CreateModel(
            name='SecurityNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('suspicious_login', 'Connexion suspecte'), ('new_device', 'Nouvel appareil'), ('password_changed', 'Mot de passe changé'), ('2fa_enabled', '2FA activé'), ('account_locked', 'Compte verrouillé'), ('data_breach', 'Violation de données')], max_length=30, verbose_name='type de notification')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('message', models.TextField(verbose_name='message')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='métadonnées')),
                ('is_read', models.BooleanField(default=False, verbose_name='lu')),
                ('is_sent', models.BooleanField(default=False, verbose_name='envoyé')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='lu le')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification de sécurité',
                'verbose_name_plural': 'Notifications de sécurité',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FailedLoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('ip_address', models.GenericIPAddressField(verbose_name='adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='horodatage')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='bloqué')),
            ],
            options={
                'verbose_name': 'Tentative de connexion échouée',
                'verbose_name_plural': 'Tentatives de connexion échouées',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['email', 'timestamp'], name='security_fa_email_d1e192_idx'), models.Index(fields=['ip_address', 'timestamp'], name='security_fa_ip_addr_7c0157_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login', 'Connexion'), ('logout', 'Déconnexion'), ('login_failed', 'Échec de connexion'), ('password_change', 'Changement de mot de passe'), ('password_reset', 'Réinitialisation de mot de passe'), ('2fa_enabled', '2FA activé'), ('2fa_disabled', '2FA désactivé'), ('2fa_used', '2FA utilisé'), ('suspicious_activity', 'Activité suspecte'), ('account_locked', 'Compte verrouillé'), ('account_unlocked', 'Compte déverrouillé'), ('permission_denied', 'Accès refusé'), ('data_export', 'Export de données'), ('data_import', 'Import de données')], max_length=30, verbose_name="type d'événement")),
                ('severity', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], default='medium', max_length=10, verbose_name='gravité')),
                ('description', models.TextField(verbose_name='description')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='localisation')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='métadonnées')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='résolu')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='résolu le')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='horodatage')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Événement de sécurité',
                'verbose_name_plural': 'Événements de sécurité',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'event_type'], name='security_se_user_id_3e6c68_idx'), models.Index(fields=['severity', 'timestamp'], name='security_se_severit_5c25b4_idx'), models.Index(fields=['is_resolved', 'timestamp'], name='security_se_is_reso_90106b_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('create', 'Création'), ('read', 'Lecture'), ('update', 'Modification'), ('delete', 'Suppression'), ('login', 'Connexion'), ('logout', 'Déconnexion'), ('export', 'Export'), ('import', 'Import'), ('permission_change', 'Changement de permission')], max_length=20, verbose_name="type d'action")),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(verbose_name='description')),
                ('old_values', models.JSONField(blank=True, default=dict, verbose_name='anciennes valeurs')),
                ('new_values', models.JSONField(blank=True, default=dict, verbose_name='nouvelles valeurs')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('session_key', models.CharField(blank=True, max_length=40, verbose_name='clé de session')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='horodatage')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Journal d'audit",
                'verbose_name_plural': "Journaux d'audit",
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'action_type'], name='security_au_user_id_1b7b09_idx'), models.Index(fields=['content_type', 'object_id'], name='security_au_content_ced803_idx'), models.Index(fields=['timestamp'], name='security_au_timesta_82ac0d_idx')],
            },
        ),
    ]
